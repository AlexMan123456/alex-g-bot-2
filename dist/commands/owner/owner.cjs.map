{"version":3,"sources":["../../../src/commands/owner/owner.ts"],"sourcesContent":["import type { ApplicationCommandRegistry, Awaitable } from \"@sapphire/framework\";\nimport { Subcommand } from \"@sapphire/plugin-subcommands\";\nimport evalCommand from \"src/commands/owner/_eval\";\nimport ownerTestCommand from \"src/commands/owner/_test\";\n\nclass OwnerCommand extends Subcommand {\n  constructor(context: Subcommand.LoaderContext, options: Subcommand.Options) {\n    super(context, {\n      ...options,\n      preconditions: [\"OwnerOnly\"],\n      subcommands: [\n        {\n          name: \"test\",\n          chatInputRun: ownerTestCommand,\n          default: true,\n        },\n        {\n          name: \"eval\",\n          chatInputRun: evalCommand,\n        },\n      ],\n    });\n  }\n\n  registerApplicationCommands(registry: ApplicationCommandRegistry): Awaitable<void> {\n    registry.registerChatInputCommand((builder) => {\n      return builder\n        .setName(\"owner\")\n        .setDescription(\"Commands only the bot owner can run\")\n        .addSubcommand((command) => {\n          return command\n            .setName(\"test\")\n            .setDescription(\"Respond with a special message if run by the bot owner\");\n        })\n        .addSubcommand((command) => {\n          return command.setName(\"eval\").setDescription(\"Evaluate some JavaScript code\");\n        });\n    });\n  }\n}\n\nexport default OwnerCommand;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAA2B;AAC3B,kBAAwB;AACxB,kBAA6B;AAE7B,MAAM,gBAAN,MAAM,sBAAqB,qCAAW;AAAA,EACpC,YAAY,SAAmC,SAA6B;AAC1E,UAAM,SAAS;AAAA,MACb,GAAG;AAAA,MACH,eAAe,CAAC,WAAW;AAAA,MAC3B,aAAa;AAAA,QACX;AAAA,UACE,MAAM;AAAA,UACN,cAAc,YAAAA;AAAA,UACd,SAAS;AAAA,QACX;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc,YAAAC;AAAA,QAChB;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,4BAA4B,UAAuD;AACjF,aAAS,yBAAyB,CAAC,YAAY;AAC7C,aAAO,QACJ,QAAQ,OAAO,EACf,eAAe,qCAAqC,EACpD,cAAc,CAAC,YAAY;AAC1B,eAAO,QACJ,QAAQ,MAAM,EACd,eAAe,wDAAwD;AAAA,MAC5E,CAAC,EACA,cAAc,CAAC,YAAY;AAC1B,eAAO,QAAQ,QAAQ,MAAM,EAAE,eAAe,+BAA+B;AAAA,MAC/E,CAAC;AAAA,IACL,CAAC;AAAA,EACH;AACF;AAlCsC;AAAtC,IAAM,eAAN;AAoCA,IAAO,gBAAQ;","names":["ownerTestCommand","evalCommand"]}