{"version":3,"sources":["../../../src/commands/database/database.ts"],"sourcesContent":["import type { ApplicationCommandRegistry, Awaitable } from \"@sapphire/framework\";\nimport { Subcommand } from \"@sapphire/plugin-subcommands\";\nimport addUserCommand from \"src/commands/database/_add-user\";\nimport query from \"src/commands/database/_query\";\n\nclass DatabaseCommand extends Subcommand {\n  constructor(context: Subcommand.LoaderContext, options: Subcommand.Options) {\n    super(context, {\n      ...options,\n      preconditions: [\"OwnerOnly\"],\n      subcommands: [\n        {\n          name: \"query\",\n          chatInputRun: query,\n        },\n        {\n          name: \"add-user\",\n          chatInputRun: addUserCommand,\n        },\n      ],\n    });\n  }\n\n  public override registerApplicationCommands(\n    registry: ApplicationCommandRegistry,\n  ): Awaitable<void> {\n    registry.registerChatInputCommand((builder) => {\n      return builder\n        .setName(\"database\")\n        .setDescription(\"Interact with the bot's database\")\n        .addSubcommand((command) => {\n          return command\n            .setName(\"query\")\n            .setDescription(\"Query the bot's database\")\n            .addStringOption((option) => {\n              return option\n                .setName(\"query\")\n                .setDescription(\"The SQL query to run\")\n                .setRequired(true);\n            });\n        })\n        .addSubcommand((command) => {\n          return command\n            .setName(\"add-user\")\n            .setDescription(\"Add a user to the bot's database\")\n            .addUserOption((option) => {\n              return option.setName(\"user\").setDescription(\"The user to add\").setRequired(true);\n            });\n        });\n    });\n  }\n}\n\nexport default DatabaseCommand;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAA2B;AAC3B,sBAA2B;AAC3B,mBAAkB;AAElB,MAAM,mBAAN,MAAM,yBAAwB,qCAAW;AAAA,EACvC,YAAY,SAAmC,SAA6B;AAC1E,UAAM,SAAS;AAAA,MACb,GAAG;AAAA,MACH,eAAe,CAAC,WAAW;AAAA,MAC3B,aAAa;AAAA,QACX;AAAA,UACE,MAAM;AAAA,UACN,cAAc,aAAAA;AAAA,QAChB;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc,gBAAAC;AAAA,QAChB;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEgB,4BACd,UACiB;AACjB,aAAS,yBAAyB,CAAC,YAAY;AAC7C,aAAO,QACJ,QAAQ,UAAU,EAClB,eAAe,kCAAkC,EACjD,cAAc,CAAC,YAAY;AAC1B,eAAO,QACJ,QAAQ,OAAO,EACf,eAAe,0BAA0B,EACzC,gBAAgB,CAAC,WAAW;AAC3B,iBAAO,OACJ,QAAQ,OAAO,EACf,eAAe,sBAAsB,EACrC,YAAY,IAAI;AAAA,QACrB,CAAC;AAAA,MACL,CAAC,EACA,cAAc,CAAC,YAAY;AAC1B,eAAO,QACJ,QAAQ,UAAU,EAClB,eAAe,kCAAkC,EACjD,cAAc,CAAC,WAAW;AACzB,iBAAO,OAAO,QAAQ,MAAM,EAAE,eAAe,iBAAiB,EAAE,YAAY,IAAI;AAAA,QAClF,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACH;AACF;AA9CyC;AAAzC,IAAM,kBAAN;AAgDA,IAAO,mBAAQ;","names":["query","addUserCommand"]}