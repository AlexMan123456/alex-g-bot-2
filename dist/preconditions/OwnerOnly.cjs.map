{"version":3,"sources":["../../src/preconditions/OwnerOnly.ts"],"sourcesContent":["import type { Precondition } from \"@sapphire/framework\";\nimport { AllFlowsPrecondition } from \"@sapphire/framework\";\nimport type {\n  ChatInputCommandInteraction,\n  ContextMenuCommandInteraction,\n  Message,\n} from \"discord.js\";\n\nclass OwnerOnly extends AllFlowsPrecondition {\n  public doOwnerCheck(userId: string) {\n    return process.env.OWNER_ID === userId\n      ? this.ok()\n      : this.error({\n          message: \"This command can only be used by the owner\",\n          context: { ephemeral: true },\n        });\n  }\n\n  public override chatInputRun(interaction: ChatInputCommandInteraction): Precondition.Result {\n    return this.doOwnerCheck(interaction.user.id);\n  }\n\n  public override contextMenuRun(interaction: ContextMenuCommandInteraction): Precondition.Result {\n    return this.doOwnerCheck(interaction.user.id);\n  }\n\n  public override messageRun(message: Message): Precondition.Result {\n    return this.doOwnerCheck(message.author.id);\n  }\n}\n\ndeclare module \"@sapphire/framework\" {\n  interface Preconditions {\n    OwnerOnly: never;\n  }\n}\n\nexport default OwnerOnly;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,uBAAqC;AAOrC,MAAM,aAAN,MAAM,mBAAkB,sCAAqB;AAAA,EACpC,aAAa,QAAgB;AAClC,WAAO,QAAQ,IAAI,aAAa,SAC5B,KAAK,GAAG,IACR,KAAK,MAAM;AAAA,MACT,SAAS;AAAA,MACT,SAAS,EAAE,WAAW,KAAK;AAAA,IAC7B,CAAC;AAAA,EACP;AAAA,EAEgB,aAAa,aAA+D;AAC1F,WAAO,KAAK,aAAa,YAAY,KAAK,EAAE;AAAA,EAC9C;AAAA,EAEgB,eAAe,aAAiE;AAC9F,WAAO,KAAK,aAAa,YAAY,KAAK,EAAE;AAAA,EAC9C;AAAA,EAEgB,WAAW,SAAuC;AAChE,WAAO,KAAK,aAAa,QAAQ,OAAO,EAAE;AAAA,EAC5C;AACF;AArB6C;AAA7C,IAAM,YAAN;AA6BA,IAAO,oBAAQ;","names":[]}